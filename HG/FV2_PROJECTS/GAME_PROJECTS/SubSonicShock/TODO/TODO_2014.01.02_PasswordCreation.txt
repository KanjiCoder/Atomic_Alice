1345 adjectives * 1004 nouns == 1,350,380 combinations.
Could easily make hash that determines password based on your name...
Figure out key for this.


"JOSH" is hashed in multiple ways:

1. ADJ-LIST starting point.
2. VERB-LIST starting point.
In order for password to be valid, the two words typed must be the SAME distance from their respective starting points.
Because of this, the maximum amount of passwords per name will be equal to the length of the shortest of the two lists (adj list or verb list)

Password Validation:
1. Are the two words in your list of words? (How do we make sure they type the two words separately???)
Ex: AngryMonkey
    Solution Ideas:
    1. Case Sensitive Password.
    2. Matching algorithm to figure out the two words being used. (prone to error)
    3. Error if the password is not composed of two words. Must be a space between words.

How do we hash starting points from the letters of the name?
1. Each letter adds it's placement in alphabet to a sum.
A == +1
B == +2
C == +3 etc.
Then we tesselate that sum if it overflows.

2. For he verb-list, each letter adding to the sum takes the INVERSE.
A == 27
B == 26
C == 25 etc.


Can also have numbers in your name.
Numbers. Add to sum using their actual value. 0-9
And for verb-list, the inverse of their value.



